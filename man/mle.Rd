% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mle.R
\name{mle}
\alias{mle}
\alias{mle,ANY,character-method}
\alias{mle,numeric,Beta-method}
\alias{mle,matrix,Beta-method}
\alias{mle,numeric,Gammad-method}
\alias{mle,matrix,Gammad-method}
\alias{mle,matrix,Dirichlet-method}
\alias{mle,matrix,MGamma-method}
\title{Maximum Likelihood Estimator}
\usage{
mle(x, distr, ...)

\S4method{mle}{ANY,character}(x, distr, ...)

\S4method{mle}{numeric,Beta}(
  x,
  distr,
  par0 = same,
  method = "L-BFGS-B",
  lower = c(1e-05, 1e-05),
  upper = c(Inf, Inf)
)

\S4method{mle}{matrix,Beta}(
  x,
  distr,
  par0 = same,
  method = "L-BFGS-B",
  lower = c(1e-05, 1e-05),
  upper = c(Inf, Inf)
)

\S4method{mle}{numeric,Gammad}(
  x,
  distr,
  par0 = same,
  method = "L-BFGS-B",
  lower = c(1e-05, 1e-05),
  upper = c(Inf, Inf)
)

\S4method{mle}{matrix,Gammad}(
  x,
  distr,
  par0 = same,
  method = "L-BFGS-B",
  lower = c(1e-05, 1e-05),
  upper = c(Inf, Inf)
)

\S4method{mle}{matrix,Dirichlet}(
  x,
  distr,
  par0 = same,
  method = "L-BFGS-B",
  lower = rep(1e-05, times = nrow(x)),
  upper = rep(Inf, times = nrow(x))
)

\S4method{mle}{matrix,MGamma}(x, distr, par0 = same, method = "L-BFGS-B", lower = NULL, upper = NULL)
}
\arguments{
\item{x}{numeric. A sample under estimation.}

\item{distr}{A subclass of \code{Distribution}. The distribution family assumed.}

\item{...}{extra arguments.}

\item{par0}{function. The estimator to use for initialization of the
likelihood maximization algorithm.}

\item{method, lower, upper}{arguments passed to optim.}
}
\value{
numeric or list. The estimator produced by the sample. In case the
distribution parameters hold specific structures (e.g. the Matrix Gamma
parameters are a positive real number and a positive definite matrix), a
list is returned instead.
}
\description{
Calculates the MLE of a sample under the assumption the observations are
independent and identically distributed (iid) according to a specified
family of distributions.
}
\examples{
\dontrun{
# Distribution
d_beta <- Beta(shape1 = 1, shape2 = 1.5)

# Simulation
set.seed(2)
x <- r(d_beta)(50)

# Estimation
me(x, "Beta")
same(x, "Beta")
mle(x, "Beta")

# Asymptotic Covariance Matrix
acov_me(d_beta)
acov_same(d_beta)
acov_mle(d_beta)
}
}
